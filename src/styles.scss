/* You can add global styles to this file, and also import other style files */
@import "variables";

html, body {
    // scroll-behavior: smooth;
    height: 100%;
    font-family: "Nunito", "Inter", Arial, Helvetica, sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

html {
    font-size: 16px;
    font-weight: 500;
    line-height: 1.42;
}

body {
    margin: 0;
    color: var(--color-black1);
    // background-color: var(--tg-theme-bg-color); // переменная доступная благодаря script из index.html нужна для того чтобы регулировать стили приложения в завис от темы (светлая/темная) telegram

    &.no-scroll {
        overflow: hidden;
    }

    &.noScrollFromSort {
        overflow: hidden;
        @media #{$mobile} {
            .pageWrap {
                overflow: hidden;
            }
        }
    }
}

* {
    box-sizing: border-box;
}

a {
    text-decoration: none;
    color: #000;
}

ul, ol {
    margin: 0;
    padding: 0;
}

p {
    padding: 0;
    margin: 0;
}

ul li {
    list-style: none;
}

h1, h2, h3, h4, h5, h6 {
    font-weight: 900;
    margin: 0;
}

h1 {
    font-size: 40px;
    line-height: 44px;
}

h2 {
    font-size: 32px;
    line-height: 40px;
}

h3 {
    font-size: 24px;
    line-height: 32px;
}

.moduleTitle {}

img {
    display: block;
}

button {
    font-family: "Nunito", "Inter", Arial, Helvetica, sans-serif;
    color: #000;
    &[disabled] {
        color: rgb(0 0 0 / 20%);
    }
}

// Этим отключаем scrollBar во всем приложении:
::-webkit-scrollbar { 
    display: block;
}

::-webkit-scrollbar:vertical {
    width: 0px;
}

::-webkit-scrollbar:horizontal {
    height: 0px;
}

.container {
    margin: 0 auto;
    max-width: 1240px;
    padding: 0 20px;
}

.linkToApp {
    display: flex;
    flex-wrap: wrap;
    column-gap: 16px;
    row-gap: 16px;
    .linkToApp__item {
        cursor: pointer;
        .linkToApp__img {
            max-height: 48px;
        }
    }
}

.btn {
    cursor: pointer;
    padding: 12px 24px;
    background-color: $color-main;
    border: none;
    color: var(--color-white);
    border-radius: 16px;
    font-size: 16px;
    font-weight: 600;
    line-height: 24px;

    &--white {
        color: var(--color-black1);
        background-color: var(--color-white);
    }

    &--size--long {
        width: 100%;
    }

    &--disabled {
        cursor: not-allowed;
        opacity: .3;
    }

    @media #{$notMobile} {
        font-size: 18px;
    }
}

.downloadApp {
    cursor: pointer;
    padding: 24px 24px 24px 32px;
    background-color: var(--color-gray1);
    color: var(--color-black1);
    border-radius: 24px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    font-size: 16px;

    .downloadApp__title {
        flex: 1;
        font-weight: 700;
        line-height: 24px;
    }

    .downloadApp__icon {
        margin-left: 14px;

        img {
            max-width: 100%;
        }
    }

    @media #{$notMobile} {
        padding: 24px 32px;
        .downloadApp__icon {
            display: none;
        }
    }
}

// .loaderBlock {
//     position: relative;
//     width: 200px;
//     height: 200px;
//     border: 1px solid;
// }

.withSimpleSkeleton {
    position: relative;
    color: transparent;
    overflow: hidden;
    &:before {
        content: '';
        position: absolute;
        height: 80%;
        width: 100%;
        background-color: #eee;
        border-radius: 20px;
        top: 50%;
        transform: translateY(-50%);
        z-index: 10;
    }
    &:after {
        content: '';
        position: absolute;
        left: -100%;
        top: 0;
        height: 100%;
        width: 100%;
        max-width: 232px;
        background: linear-gradient(to right, RGBA(255, 255, 255, 0) 0%, #fff 50%, RGBA(255, 255, 255, 0) 100%);
        animation: 2s cubic-bezier(0.4, 0.0, 0.2, 1) .8s infinite normal none running load;
        z-index: 20;
    }
}

.skeletonLoader {
    display: none;
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: #fff; // цвет главного background
    &:before {
        content: '';
        position: absolute;
        height: 100%;
        width: 100%;
        background-color: #eee;
        border-radius: 20px;
    }
    &:after {
        content: '';
        position: absolute;
        left: -100%;
        top: 0;
        height: 100%;
        width: 100%;
        max-width: 232px;
        background: linear-gradient(to right, RGBA(255, 255, 255, 0) 0%, #fff 50%, RGBA(255, 255, 255, 0) 100%);
        animation: 2s cubic-bezier(0.4, 0.0, 0.2, 1) .8s infinite normal none running load;
    }

    &--shortHeight {
        &:before {
            height: 80%;
            top: 50%;
            transform: translateY(-50%);
        }
    }
}

@keyframes load {
    from {
        left: max(-100%, -232px);
    }
    to {
        left: 100%;
    }
}

.closeButtonInWindow {
    cursor: pointer;
    position: relative;

    &:before {
        content: "";
        width: 50px;
        height: 50px;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    &--withEffect {
        &:hover {
            .iconForCloseInModal {
                transform: scale(1.4) rotate(180deg);
            }
        }
    }
}

.iconForCloseInModal {
    position: relative;
    width: 24px;
    height: 24px;
    transition: .7s;

    &:before {
        content: "";
        width: 2px;
        height: 20px;
        border-radius: 1px;
        background-color: var(--color-black1);
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(45deg);
        transform-origin: center center;
    }

    &:after {
        content: "";
        width: 2px;
        height: 20px;
        border-radius: 1px;
        background-color: var(--color-black1);
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(-45deg);
        transform-origin: center center;
    }
}

.feedback {
    display: flex;
    flex-direction: column;
    column-gap: 24px;
    row-gap: 14px;
    align-items: center;
    background-color: var(--color-gray1);
    padding: 24px 28px;
    border-radius: 20px;
    line-height: 24px;
    font-weight: 700;

    .feedback__text {
        position: relative;
        margin: 0 30px;
    }

    .feedback__spinner {
        width: 20px;
        height: 20px;
        position: absolute;
        top: 50%;
        left: 100%;
        transform: translate(10px, -50%);

        img {
            width: 100%;
            height: 100%;
        }
    }

    .feedback__values {
        display: flex;
        column-gap: 24px;

        &--disabled {
            .feedbackVal {
                cursor: default;
            }
        }

        &--loading {
            .feedbackVal {
                cursor: wait;
            }
        }
    }

    @media #{$notMobile} {
        flex-direction: row;
        justify-content: space-between;

        .feedback__text {
            margin-left: 0px;
        }
    }
}

.feedbackVal {

    display: flex;
    column-gap: 10px;
    align-items: center;
    cursor: pointer;
    
    .feedbackVal__icon {
        width: 27px;
        height: 27px;

        img, svg {
            max-width: 100%;
            max-height: 100%;
        }
    }

    .feedbackVal__amount {
        color: var(--color-text-gray);
    }

    &--leftItem {
        flex-direction: row-reverse;
    }

    &--disabled {
        cursor: default;
        .feedbackVal__amount {
            color: var(--color-text-gray);
        }
        .feedbackVal__icon {
            svg path {
                fill: var(--color-text-gray);
            }
        }
    }

    &--active {
        cursor: default;
        transform: scale(1.2);
        .feedbackVal__amount {
            color: var(--color-red);
        }
        .feedbackVal__icon {
            svg path {
                fill: var(--color-red);
            }
        }
    }

    @media #{$notMobile} {
        &--leftItem {
            flex-direction: row;
        }
    }
}

.feedbackVal--active.feedbackVal--like {
    .feedbackVal__amount {
        color: var(--color-green);
    }
    .feedbackVal__icon {
        svg path {
            fill: var(--color-green);
        }
    }
}
.feedback {
    .feedback__values {
        &:not(.feedback__values--loading) {
            .feedbackVal:hover {
                &:not(.feedbackVal--disabled) {
                    .feedbackVal__amount {
                        color: var(--color-blue1);
                    }

                    .feedbackVal__icon {
                        svg path {
                            fill: var(--color-blue1);
                        }
                    }
                }
            }
        }
    }
}

.errorMessage {
    background-color: var(--color-gray1);
    border-radius: 20px;
    padding: 40px;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    row-gap: 8px;
    font-size: 24px;
    .errorMessage__icon {
        margin-bottom: 8px;
        width: 34px;
        height: 34px;
        background-repeat: no-repeat;
        background-size: contain;
        background-position: center center;
        background-image: url('/assets/icons/grayTriangleIcon.svg');
    }
    .errorMessage__title {
        font-weight: 700;
    }
    .errorMessage__btn {
        position: relative;
        cursor: pointer;
        margin-top: 16px;
        font-size: 16px;
        line-height: 24px;
        padding: 16px 32px;
        border-radius: 16px;
        border: none;
        background-color: white;


        .errorMessage__btnSpinner {
            display: none;
            position: absolute;
            width: 100%;
            height: 100%;
            top: 50%;
            left: 50%;
            max-height: 30px;
            max-width: 30px;
            transform: translate(-50%, -50%);
        }

        &--isLoading {
            cursor: default;
            color: transparent;
            background-color: transparent;
            .errorMessage__btnSpinner {
                display: block;
            }
        }
    }

    @media #{$notMobile} {
        align-items: center;
        .errorMessage__text {
            text-align: center;
        }
    }
}

.aboutPersonParagraph {
    margin-bottom: 16px;
    &:last-child {
        margin-bottom: 0px;
    }
}

.connectWithUsBtn {
    font-size: 16px;
    display: block;
    padding: 24px;
    border-radius: 24px;
    background-color: var(--color-white);
    text-align: center;
    .connectWithUsBtn__head {
        color: var(--color-text-gray);
        margin-bottom: 8px;
    }

    &--gray {
        background-color: var(--color-gray1);
    }

    @media #{$notMobile} {
        font-size: 24px;
    }
}

.scrollProgressWrapper {
    position: sticky;
    bottom: 0px;
    // top: calc(100% - 30px);
    // transform: translateY(-100%);
    height: 0px;
    // width: 0px;
}

.scrollProgress {
    cursor: pointer;
    background-color: var(--color-black1);
    box-shadow: 0px 0px 10px 0px var(--color-black1);
    border-radius: 50%;

    position: absolute;
    bottom: 100%;
    
    width: 48px;
    height: 48px;
    margin: 0px 20px 30px;
    opacity: 1;
    transition: opacity .3s;

    &:before {
        content: "";
        position: absolute;
        width: 10px;
        height: 10px;
        border: 3px solid white;
        border-bottom: none;
        border-left: none;
        left: 50%;
        transform: translate(-50%, 20px) rotate(-45deg);
    }

    &:after {
        content: "";
        position: absolute;
        width: 130%;
        height: 130%;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    &--hidden {
        pointer-events: none;
        cursor: default;
        opacity: 0;
        transition: opacity .3s;
    }

    &--opacity:not(.scrollProgress--hidden) {
        opacity: .5;
    }
}